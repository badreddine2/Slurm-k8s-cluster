---
- name: Deploy Manifests
  hosts: localhost
  gather_facts: no
  tasks:

    - debug:
        msg: "Start deployment"
    
    - name: Create Kubernetes cluster
      command : kind create cluster --config kind.yaml

    - name: Setup nfs in kind-worker
      command: >
        docker exec kind-worker bash -c "
        apt update &&
        apt install -y nfs-common &&
        mkdir -p {{ nfs_slurmctld_mount_path }} &&
        mkdir -p {{ nfs_mysql_mount_path }} &&
        mount {{ host_ip }}:{{ nfs_path_slurmctld }} {{ nfs_slurmctld_mount_path }} &&
        mount {{ host_ip }}:{{ nfs_path_mysql }} {{ nfs_mysql_mount_path }} "


    - name: Setup nfs in kind-worker2
      command: >
        docker exec kind-worker bash -c "
        apt update &&
        apt install -y nfs-common &&
        mkdir -p {{ nfs_slurmctld_mount_path }} &&
        mkdir -p {{ nfs_mysql_mount_path }} &&
        mount {{ host_ip }}:{{ nfs_path_slurmctld }} {{ nfs_slurmctld_mount_path }} &&
        mount {{ host_ip }}:{{ nfs_path_mysql }} {{ nfs_mysql_mount_path }} "


    - name: Create MetalLB namespace
      command: kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.12.1/manifests/namespace.yaml

    - name: Install MetalLB CRDs
      command: kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.12.1/manifests/metallb.yaml
      register: output
      ignore_errors: True

    - name: Deploy metalLB configuration
      command: kubectl apply -f "{{ service_path }}"/metallb-config.yaml

    - name: Apply storageclass 
      command: kubectl apply -f "{{ storage_path }}"/storageclass.yaml

    - name: Apply persistent volume
      command: kubectl apply -f "{{ storage_path }}"/pv.yaml

    - name: Apply persistent volume claim
      command: kubectl apply -f "{{ storage_path }}"/pvc.yaml

    - name: Apply slurmdb.yaml
      command: kubectl apply -f "{{ deployment_path }}"/slurmdb.yaml

    - name: Service to ensure communication between Slurmctld and slurmdbd
      command: kubectl apply -f "{{ service_path }}"/slurm-mysql-svc.yaml

    - name: Wait for slurmdbd to be running
      command: kubectl wait --for=condition=Ready pod -l app=slurm-mysql --timeout=300s
      register: wait_result
      retries: 10
      delay: 30
      until: wait_result is succeeded

    - name: Deploy slurmctld pod
      command: kubectl apply -f "{{ deployment_path }}"/slurmctld-pod.yaml
      when: wait_result is succeeded

    - name: Deploy loadbalancer service for slurmdbd
      command: kubectl apply -f "{{ service_path }}"/lb-dbd.yaml
      when: wait_result is succeeded
  
    - name: Wait for slurmctld to be running
      command: kubectl wait --for=condition=Ready pod -l app=slurmctld --timeout=300s
      register: result
      retries: 10
      delay: 30
      until: result is succeeded

    - name: restart slurmd service
      command: systemctl restart slurmd

       
    - name: Execute sinfo command
      command: sinfo
      register: sinfo_output
      when: result is succeeded

    - name: Print sinfo output
      debug:
        var: sinfo_output.stdout
    
    - debug:
        msg: "Deployment finished"
      when: result is succeeded

